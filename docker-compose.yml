services:
  db:
    image: postgres:14.13
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 3s
      retries: 5
      start_period: 30s
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - backnet
    environment:
      - POSTGRES_PASSWORD=/run/secrets/db-password
    expose:
      - 5432

  backend:
    build:
      context: backend
    restart: always
    scale: 3
    secrets:
      - db-password
    environment:
      - FLASK_DB_PASSWORD=/run/secrets/db-password
      - FLASK_DB_HOST=db
    expose:
      - 5000
    networks:
      - backnet
      - frontnet
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: frontend
    restart: always
    ports:
      - 80:80
    depends_on:
      - backend
    networks:
      - frontnet

volumes:
  db-data:

secrets:
  db-password:
    file: db/password.txt

networks:
  backnet:
  frontnet:
